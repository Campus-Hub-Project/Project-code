generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  INSTITUITION
}

model User {
  id            String    @id @default(cuid())
  name          String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  password      String?
  role          UserRole  

  accounts       Account[]
  events         Event[]
  participations Event[]   @relation("participants")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@map("users")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model VerificateEmailToken {
  id         String   @id @default(uuid())
  identifier String?
  email      String?
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificate_email_tokens")
}

model Event {
  id                 String   @id @default(uuid())
  userId             String   @map("user_id")
  name               String
  description        String   @db.Text
  type               String
  format             String
  starts             DateTime
  ends               DateTime?
  subs_starts        DateTime
  subs_ends          DateTime?
  participants_limit Int      @default(0)
  participants       User[]   @relation("participants")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("events")
}
